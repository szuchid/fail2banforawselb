# Fail2Ban configuration file for AWS EC2 Linux nodes.
# If you use ALB or ELB, you can block attacks on VPC network ACL.
# Author: Szuchi Daniel
#
#

[Definition]

# Option:  actionstart
# Notes.:  Writes log to syslog.
#
actionstart = logger -s -t "AWSfail2banALB" "The fail2bann AWS modul started."

# Option:  actionstop
# Notes.:  Writes log to syslog.
#
actionstop = logger -s -t "AWSfail2banALB" "The fail2bann AWS modul stopped."

# Option:  actioncheck
# Notes.:  Optional
#
actioncheck =

# Option:  actionban
# Notes.:  Adds ip to AWS VPC network ACL
#          You have to replace the <NAI> to your network acl id, and you can change the protocol, port range and rule number for your configuration.
#	   The modul generate integer from ip address for rule number. Set the personal rules in VPC network ACL over 2000.
#

actionban = n=$(echo "<ip>" | md5sum | grep -Eo "[[:digit:]]{3}"  | head -n1)
	    aws ec2 create-network-acl-entry --network-acl-id <NAI> --ingress --rule-number 1$n --protocol all --port-range From=80,To=80 --cidr-block <ip>/32 --rule-action deny

# Option:  actionunban
# Notes.:  Removes ip from AWS VPC network ACL
#          You have to replace the <NAI> to your network acl id. WARNING: Use the actionban rule number in actionunban!
#
actionunban = n=$(echo "<ip>" | md5sum | grep -Eo "[[:digit:]]{3}"  | head -n1)
	      aws ec2 delete-network-acl-entry --network-acl-id <NAI> --ingress --rule-number 1$n

[Init]

init = 123
